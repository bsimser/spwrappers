//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace SharePointWrappers.VersionsWS {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VersionsSoap", Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public class Versions : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public Versions() {
            this.Url = "http://localhost/_vti_bin/Versions.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/DeleteAllVersions", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteAllVersions(string fileName) {
            object[] results = this.Invoke("DeleteAllVersions", new object[] {
                        fileName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteAllVersions(string fileName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteAllVersions", new object[] {
                        fileName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndDeleteAllVersions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/DeleteVersion", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteVersion(string fileName, string fileVersion) {
            object[] results = this.Invoke("DeleteVersion", new object[] {
                        fileName,
                        fileVersion});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteVersion(string fileName, string fileVersion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteVersion", new object[] {
                        fileName,
                        fileVersion}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndDeleteVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/RestoreVersion", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RestoreVersion(string fileName, string fileVersion) {
            object[] results = this.Invoke("RestoreVersion", new object[] {
                        fileName,
                        fileVersion});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRestoreVersion(string fileName, string fileVersion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RestoreVersion", new object[] {
                        fileName,
                        fileVersion}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndRestoreVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetVersions", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetVersions(string fileName) {
            object[] results = this.Invoke("GetVersions", new object[] {
                        fileName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVersions(string fileName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVersions", new object[] {
                        fileName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetVersions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
    }
}
