//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.573.
// 
namespace SharePointWrappers.WebPartPagesWS {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebPartPagesWebServiceSoap", Namespace="http://microsoft.com/sharepoint/webpartpages")]
    public class WebPartPagesWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public WebPartPagesWebService() {
            this.Url = "http://localhost/_vti_bin/WebPartPages.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetWebPartPageDocument", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebPartPageDocument(string documentName) {
            object[] results = this.Invoke("GetWebPartPageDocument", new object[] {
                        documentName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWebPartPageDocument(string documentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWebPartPageDocument", new object[] {
                        documentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetWebPartPageDocument(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/RenderWebPartForEdit", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RenderWebPartForEdit(string webPartXml) {
            object[] results = this.Invoke("RenderWebPartForEdit", new object[] {
                        webPartXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRenderWebPartForEdit(string webPartXml, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RenderWebPartForEdit", new object[] {
                        webPartXml}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRenderWebPartForEdit(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetXmlDataFromDataSource", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetXmlDataFromDataSource(string queryXml) {
            object[] results = this.Invoke("GetXmlDataFromDataSource", new object[] {
                        queryXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetXmlDataFromDataSource(string queryXml, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetXmlDataFromDataSource", new object[] {
                        queryXml}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetXmlDataFromDataSource(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/AddWebPart", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid AddWebPart(string pageUrl, string webPartXml, Storage storage) {
            object[] results = this.Invoke("AddWebPart", new object[] {
                        pageUrl,
                        webPartXml,
                        storage});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddWebPart(string pageUrl, string webPartXml, Storage storage, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddWebPart", new object[] {
                        pageUrl,
                        webPartXml,
                        storage}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Guid EndAddWebPart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetWebPart", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebPart(string pageurl, System.Guid storageKey, Storage storage) {
            object[] results = this.Invoke("GetWebPart", new object[] {
                        pageurl,
                        storageKey,
                        storage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWebPart(string pageurl, System.Guid storageKey, Storage storage, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWebPart", new object[] {
                        pageurl,
                        storageKey,
                        storage}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetWebPart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetWebPartProperties", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetWebPartProperties(string pageUrl, Storage storage) {
            object[] results = this.Invoke("GetWebPartProperties", new object[] {
                        pageUrl,
                        storage});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWebPartProperties(string pageUrl, Storage storage, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWebPartProperties", new object[] {
                        pageUrl,
                        storage}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetWebPartProperties(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/SaveWebPart", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveWebPart(string pageUrl, System.Guid storageKey, string webPartXml, Storage storage) {
            this.Invoke("SaveWebPart", new object[] {
                        pageUrl,
                        storageKey,
                        webPartXml,
                        storage});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveWebPart(string pageUrl, System.Guid storageKey, string webPartXml, Storage storage, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveWebPart", new object[] {
                        pageUrl,
                        storageKey,
                        webPartXml,
                        storage}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSaveWebPart(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/DeleteWebPart", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteWebPart(string pageUrl, System.Guid storageKey, Storage storage) {
            this.Invoke("DeleteWebPart", new object[] {
                        pageUrl,
                        storageKey,
                        storage});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteWebPart(string pageUrl, System.Guid storageKey, Storage storage, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteWebPart", new object[] {
                        pageUrl,
                        storageKey,
                        storage}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteWebPart(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetWebPartPageConnectionInfo", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebPartPageConnectionInfo(string sourcePageUrl, string sourcePageContents, string providerPartID, string lcid) {
            object[] results = this.Invoke("GetWebPartPageConnectionInfo", new object[] {
                        sourcePageUrl,
                        sourcePageContents,
                        providerPartID,
                        lcid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWebPartPageConnectionInfo(string sourcePageUrl, string sourcePageContents, string providerPartID, string lcid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWebPartPageConnectionInfo", new object[] {
                        sourcePageUrl,
                        sourcePageContents,
                        providerPartID,
                        lcid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetWebPartPageConnectionInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetWebPartCrossPageCompatibility", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebPartCrossPageCompatibility(string sourcePageUrl, string sourcePageContents, string targetPageUrl, string targetPageContents, string providerPartID, string lcid) {
            object[] results = this.Invoke("GetWebPartCrossPageCompatibility", new object[] {
                        sourcePageUrl,
                        sourcePageContents,
                        targetPageUrl,
                        targetPageContents,
                        providerPartID,
                        lcid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWebPartCrossPageCompatibility(string sourcePageUrl, string sourcePageContents, string targetPageUrl, string targetPageContents, string providerPartID, string lcid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWebPartCrossPageCompatibility", new object[] {
                        sourcePageUrl,
                        sourcePageContents,
                        targetPageUrl,
                        targetPageContents,
                        providerPartID,
                        lcid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetWebPartCrossPageCompatibility(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/sharepoint/webpartpages")]
    public enum Storage {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Personal,
        
        /// <remarks/>
        Shared,
    }
}
